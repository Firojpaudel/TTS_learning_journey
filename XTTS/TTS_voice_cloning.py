#@ Day two code: Voice Cloning 

import torch 
from TTS.api import TTS 
from TTS.tts.configs.xtts_config import XttsConfig
from TTS.tts.models.xtts import XttsAudioConfig, XttsArgs
from TTS.config.shared_configs import BaseDatasetConfig

##@ setting up the device 
device = torch.device("cuda" if torch.cuda.is_available() else "cpu")

#@ Marking the XttsConfig class as safe for serialization (Needed in newer versions of torch) -- unpicking the model will fail without this
torch.serialization.add_safe_globals({
    XttsConfig: XttsConfig,
    XttsAudioConfig: XttsAudioConfig,
    BaseDatasetConfig: BaseDatasetConfig,
    XttsArgs: XttsArgs,
})

#@ Init TTS 
tts = TTS("tts_models/multilingual/multi-dataset/xtts_v2").to(device)

##@ Running the TTS model with example voice input 
tts.tts_to_file(
    text= "This is an output generated by the TTS model. Hope it cloned well!", 
    speaker_wav= "XTTS/sound_original/original_sound_one.wav", 
    language= "en",
    file_path = "XTTS/outputs/voice_cloning_output_day_02.wav"
)